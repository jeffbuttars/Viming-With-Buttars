priority 1

snippet op "OUTPUT()" b
OUTPUT(${1});${0}
endsnippet

snippet imp "IMPORT" b
IMPORT ${1};${0}
endsnippet

snippet emod "EXPORT MODULE" b
EXPORT ${1:`!v substitute(expand('%:t'), "\\..*$", '', 'g')`} := MODULE
    ${0}
END; // MODULE $1
endsnippet

snippet erec "EXPORT RECORD" b
EXPORT ${1} := RECORD${2:(${3})}
    ${0}
END;
endsnippet

snippet rec "RECORD"
${1} := RECORD
    ${0}
END;
endsnippet

snippet eds "EXPORT DATASET"
EXPORT ${1} := DATASET('${2:logicalname}', ${3:RecType}${4:,${5}})${0};
endsnippet

snippet ds "DATASET"
${1} := DATASET('${2:logicalname}', ${3:RecType}${4:,${5}})${0};
endsnippet

snippet XP "XPATH"
XPATH('${1}')${0}
endsnippet

snippet "un(\d*)" "UNSIGNED\d*" r
UNSIGNED`!p snip.rv = match.group(1)`
endsnippet

snippet "int(\d*)" "INTEGER\d*" r
INTEGER`!p snip.rv = match.group(1)`
endsnippet

snippet "str(\d*)" "STRING\d*" r
STRING`!p snip.rv = match.group(1)`
endsnippet

snippet "qst(\d*)" "QSTRING\d*" r
QSTRING`!p snip.rv = match.group(1)`
endsnippet

snippet mac "MACRO"
${1}(${2}) := MACRO
    ${0}
ENDMACRO; // MACRO $1()
endsnippet

snippet if "IF()"
IF(${1:test}, ${2:do})${0}
endsnippet

snippet seq "SEQUENTIAL()"
SEQUENTIAL(${1});
endsnippet

snippet func "fname := FUNCTION()"
${1:resulttype }${2:funcname}(${3}) := FUNCTION
    ${4}
    RETURN ${5};
END; //$2()${0}
endsnippet

snippet idx "NAME := INDEX()"
IDX_${1} := INDEX(
    ${2:DSET},
    {${3:KEYS}},
    ${4:IDX_NAME}
); // $1
${0}
endsnippet

snippet eidx "EXPORT NAME := INDEX()"
EXPORT IDX_${1} := INDEX(
    ${2:DSET},
    {${3:KEYS}},
    ${4:IDX_NAME}
); // $1
${0}
endsnippet

snippet ret "RETURN;"
RETURN${1};$0
endsnippet
