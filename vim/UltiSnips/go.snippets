priority 1

snippet pkg "package <>" !b
package ${1}
endsnippet

snippet imp "import" !b
import "${1}" ${0}
endsnippet

snippet imps "import" !b
import (
    "${1}"${0}
)
endsnippet

snippet str "string" !i
string${1:()}${0}
endsnippet

snippet type "type kind what" !b
type ${1:kind} ${2:struct} {
    ${3}
}${0}
endsnippet

snippet func "func" !b
func${1: (${2:recvr})} ${3:name}(${4})${5: error} {
    ${0}
} //$3()
endsnippet

snippet funct "func for Test" !b
func ${1:Test${2:FuncName}} (${4:t *testing.T}) {
    ${0}
} //$1()
endsnippet

snippet pr "Print" !b
fmt.Print(${1})${0}
endsnippet

snippet prl "Println" !b
fmt.Println(${1})${0}
endsnippet

snippet prf "Printf" !b
fmt.Printf("${1}\n", ${2})${0}
endsnippet

snippet fp "Fprint" !b
fmt.Fprint(${1:writer}, ${2})${0}
endsnippet

snippet fpf "Fprintf" !b
fmt.Fprintf(${1:writer}, "${2}", ${3})${0}
endsnippet

# For Templates
snippet { "{{stuff}}" i
{{${1}}}${0}
endsnippet

snippet ifer "if err" !b
if err != nil {
    return ${1}
}${0}
endsnippet
