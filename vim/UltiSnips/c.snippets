priority 1

clearsnippets if

snippet mdp "MACRO DEBUG PRING"
#ifdef DEBUG
#define DEBUG_PRINT(fmt, _args ...) \
    fprintf(stderr, "%s:%d " fmt "\n", __FUNCTION__, __LINE__, ##_args)
#endif
endsnippet

snippet dp "DEBUG_PRINT"
DEBUG_PRINT("${1}"${2:, ${3}});${0}
endsnippet

snippet func "function" b
${1}${2:void} ${3:func_name}(${4})
{
    ${0}
}
endsnippet

snippet "(\(?)c\*" "char *" r
`!p snip.rv = match.group(1) or '' `char *${1:vname}
endsnippet

snippet "(\(?)v\*" "void *" r
`!p snip.rv = match.group(1) or '' `void *${1:vname}
endsnippet

snippet "u(\(?)i(\d*)" "uint\d*_t" r
uint`!p snip.rv = (match.group(1) or '') + match.group(2)`_t
endsnippet

snippet uint "unsigned int" !b
unsigned int ${1};${0}
endsnippet

snippet for "My for int loop (fori)" !
for (${4}${2:i} = 0; $2 < ${1:count}; ${3:++$2})
{
	${0:/* code */}
}
endsnippet

snippet wh "while(){} loop" !b
while(${1}) {
    ${0}
} // end while( $1 )
endsnippet

snippet lerr "LOG_ERR()" !b
LOG_ERR("${1}"${2:, ${3}});${0}
endsnippet

snippet Inc "<include.h>" !b
#include <${1:${2}.h}>${0}
endsnippet

snippet inc "include.h" !b
#include "${1:${2}.h}"${0}
endsnippet

snippet mif "if () {.." !b
if (${1}) {
	${0}
}
endsnippet

snippet dinf "dzlog_info" b
dzlog_info("${1}"${2:, ${3}});${0}
endsnippet

snippet dwrn "dzlog_warn" b
dzlog_warn("${1}"${2:, ${3}});${0}
endsnippet

snippet derr "dzlog_err" b
dzlog_error("${1}"${2:, ${3}});${0}
endsnippet

snippet ddbg "dzlog_debug" b
dzlog_debug("${1}"${2:, ${3}});${0}
endsnippet

snippet dfat "dzlog_fatal" b
dzlog_fatal("${1}"${2:, ${3}});${0}
endsnippet

snippet dnot "dzlog_notice" b
dzlog_notice("${1}"${2:, ${3}});${0}
endsnippet
